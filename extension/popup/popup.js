!function(){"use strict";const e={actualMode:"autocomplete"},t=["logs","title","cursor","typing","mouseover","infinite","timeout","history","includeImages"],o=document.querySelector("#mode").querySelectorAll("button"),n=["includeImages"],s={autocomplete:[],clipboard:["typing","mouseover"],"question-to-answer":["typing","infinite","mouseover"]};function r(){const o=s[e.actualMode],r=t.filter((e=>!o.includes(e)&&!n.includes(e)));for(const e of o)document.querySelector("#"+e).parentElement.style.display="none";for(const e of r)document.querySelector("#"+e).parentElement.style.display=""}for(const t of o)t.addEventListener("click",(function(){const n=t.value;e.actualMode=n;for(const e of o)e.value!==n?e.classList.add("not-selected"):e.classList.remove("not-selected");r()}));const c="1.1.5",a=document.querySelector("#version");function i(e,t=!0){if(t)return void(a.textContent="v"+e);const o=document.createElement("a");o.href="https://github.com/marveljo25/MoodleGPT-free",o.rel="noopener noreferrer",o.target="_blank",o.textContent="v"+e,a.appendChild(o),a.appendChild(document.createTextNode(" is now available !"))}!async function(){const e=await async function(){const e=await fetch("https://raw.githubusercontent.com/yoannchb-pro/MoodleGPT/main/package.json");return(await e.json()).version}().catch((e=>(console.error(e),c))),t=e.split("."),o=c.split("."),n=Math.min(t.length,o.length);for(let s=0;s<n;++s){if(parseInt(t[s])>parseInt(o[s]))return i(e,!1);if(parseInt(o[s])>parseInt(t[s]))return i(c)}i(c)}();const l=document.querySelector("#settings"),u=document.querySelector("#advanced-settings"),d=document.querySelector("#switch-settings");function m({msg:e,isError:t,isInfinite:o}){const n=document.querySelector("#message");n.style.color=t?"red":"limegreen",n.textContent=e,n.style.display="block",o||setTimeout((()=>n.style.display="none"),5e3)}function p(e,t=!0){t&&(e=e.toLowerCase());return e.replace(/\n+/gi,"\n").replace(/(\n\s*\n)+/g,"\n").replace(/[ \t]+/gi," ").trim().replace(/^[a-z\d]\.\s/gi,"").replace(/\n[a-z\d]\.\s/gi,"\n")}d.addEventListener("click",(function(e){e.preventDefault(),"flex"===u.style.display?(l.style.display="flex",u.style.display="none",d.textContent="Advanced settings"):(l.style.display="none",u.style.display="flex",d.textContent="Go back to settings")}));const f=document.querySelector(".save"),y=document.querySelector("#check-model");if(!f)throw new Error("Save button not found");if(!y)throw new Error("Test button not found");const g=["apiKey","model","code","baseURL","maxTokens"];if(!document.querySelector("#includeImages"))throw new Error("Checkbox #includeImages not found");f.addEventListener("click",(async()=>{const o=g.map((e=>{const t=document.querySelector("#"+e);if(!t)throw new Error(`Input #${e} not found`);return t.value.trim()})),[n,s,r,c,a]=o,i=document.querySelector("#includeImages");if(!i)throw new Error("Include Images checkbox not found");if(!n||!s)return void m({msg:"Please complete all the form",isError:!0});let l=!1;try{const E=await fetch("https://openrouter.ai/api/v1/models",{headers:{Authorization:`Bearer ${n}`}});if(E.ok){const S=await E.json();function T(e){return e?e.toLowerCase().replace(/:free$/,""):""}const q=S.data?.find((e=>T(e.id).includes(T(s))||T(e.hugging_face_id).includes(T(s))));l=q?.architecture?.input_modalities?.includes("image")??!1,console.log("Model info:",q),console.log("Supports image:",l)}}catch(x){console.warn("Failed to check model capabilities:",x)}l?i.disabled=!1:(i.checked=!1,i.disabled=!0,m({msg:`Model "${s}" does not support image input.`,isError:!1}));const u=t.map((e=>{const t=document.querySelector("#"+e);if(!t)throw new Error(`Checkbox #${e} not found`);return t.checked&&"none"!==t.parentElement?.style.display})),[d,p,f,y,h,v,w,b,k]=u;chrome.storage.sync.set({moodleGPT:{apiKey:n,code:r,baseURL:c,maxTokens:a?parseInt(a):void 0,logs:d,title:p,cursor:f,typing:y,mouseover:h,infinite:v,timeout:w,history:b,includeImages:k,mode:e.actualMode,model:s}}),m({msg:"Configuration saved"})})),chrome.storage.sync.get(["moodleGPT"]).then((o=>{const n=o.moodleGPT;n&&(n.mode&&(e.actualMode=n.mode),g.forEach((e=>{const t=document.querySelector("#"+e);t&&n[e]&&(t.value=n[e])})),t.forEach((e=>{const t=document.querySelector("#"+e);t&&(t.checked=n[e]||!1)})),r())})),y.addEventListener("click",(async()=>{chrome.storage.sync.get(["moodleGPT"]).then((async e=>{const t=e.moodleGPT;if(t&&t.apiKey)if(t.model)try{m({msg:"Test successful: "+(await async function(e,t){const o=new AbortController,n=setTimeout((()=>o.abort()),2e4);let s;s={messages:[{role:"user",content:t}]};const r=`${e.baseURL&&""!==e.baseURL.trim()?e.baseURL.replace(/\/+$/,""):"https://openrouter.ai"}/api/v1/chat/completions`,c=await fetch(r,{method:"POST",headers:{Authorization:`Bearer ${e.apiKey}`,"Content-Type":"application/json"},body:JSON.stringify({model:e.model,messages:s.messages,max_tokens:e.maxTokens||200}),signal:e.timeout?o.signal:null});if(clearTimeout(n),!c.ok)throw new Error(`OpenRouter API error ${c.status}: ${await c.text()}`);const a=await c.json(),i=a.choices?.[0]?.message?.content??JSON.stringify(a);return"saveResponse"in s&&"function"==typeof s.saveResponse&&s.saveResponse(i),{question:t,response:i,normalizedResponse:p(i)}}({apiKey:t.apiKey,model:t.model,maxTokens:50},"Hello, test your response!")).response})}catch(e){m({msg:"Test failed: "+e.message,isError:!0})}else m({msg:"Model not set",isError:!0});else m({msg:"API key not set",isError:!0})}))}))}();
//# sourceMappingURL=popup.js.map
